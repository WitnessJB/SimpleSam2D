import pygame
import os
import assets
import time 
import random

pygame.init() #always do this
display_width = 800
display_height = 600

gameDisplay = pygame.display.set_mode((display_width, display_height)) #sets window size, now referencing variables instead of hard coding the resolution.
pygame.display.set_caption('Simple Sam') #sets window name/title

black = (0,0,0)
white = (255,255,255) #defining colors in RGB

clock = pygame.time.Clock()

def Jeremy(x,y):
    gameDisplay.blit(assets.hikerJeremy, (x,y)) 

Jeremy_height = 80 #Dies when only head is at the bottom of screen. Preference? Make 256?
Jeremy_width = 165 #Left boundary is weird

def block (blockx, blocky, blockw, blockh, color):
    pygame.draw.rect(gameDisplay, color, [blockx, blocky, blockw, blockh])

def text_objects(text,font):
    textSurface = font.render(text, True, black)
    return textSurface, textSurface.get_rect()
    
def message_display(text):
    largeText = pygame.font.Font('freesansbold.ttf', 115)
    TextSurf, TextRect = text_objects(text, largeText)
    TextRect.center = ((display_width/2), (display_height/2))
    gameDisplay.blit(TextSurf, TextRect)
    
    pygame.display.update()
    
    time.sleep(2)

def death():
    message_display('You died!') #I'd like to change messages based on events.
    game_loop() 

def game_loop():
    x = (display_width * 0.45)
    y = (display_height * 0.55)
    x_change = 0
    y_change = 0
    
    Jeremy_speed = 0
    
    block_startx = random.randrange(0,display_width) #starting position is random within the range of 0 and display width.
    block_starty = -600
    block_speed = 7
    block_width = 100
    block_height = 100
    
    gameExit = False
    
    while not gameExit:

        for event in pygame.event.get(): #logs EVERYTHING that happens.
            if event.type == pygame.QUIT:
                gameExit = True
                
            if event.type == pygame.KEYDOWN: #means if a key is being pressed
                if event.key == pygame.K_LEFT:
                    x_change =  -5
                elif event.key == pygame.K_RIGHT:
                    x_change = 5
                if event.key == pygame.K_UP:
                    y_change =  -5
                elif event.key == pygame.K_DOWN:
                    y_change = 5
            if event.type == pygame.KEYUP:
                if event.key == pygame.K_LEFT or event.key == pygame.K_RIGHT:
                    x_change = 0
                if event.key == pygame.K_UP or event.key == pygame.K_DOWN:
                    y_change = 0
                """if event.key == pygame.K_UP:
                    y_change = 3 #He keeps going down forever! Make him return to earth after jumping.
                elif event.key == pygame.K_DOWN:
                    y_change = 0"""
        x += x_change
        y += y_change
                
        gameDisplay.fill(white) #I want to make the background an image here
        
        #following block(blockx, blocky, blockh, blockw)
        block(block_startx, block_starty, block_width, block_height, black)
        block_starty += block_speed
        
        Jeremy(x,y)
        
        if x > display_width - Jeremy_width or x < 0:
            death()
        if y > display_height - Jeremy_height or y < 0:
            death() #changed from gameExit to launch crash sequence instead of closing window
            
        if block_starty > display_height:
            block_starty = 0 - block_height
            block_startx = random.randrange(0,display_width)
            
        pygame.display.update()
        clock.tick(60)


game_loop() #why did this keep it from crashing immediately?
pygame.quit() #can currently only quit by clicking the X button on the window.#this is now broken
quit()
